// <auto-generated />
using System;
using Authentication.Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Authentication.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250330075604_addisdeleted")]
    partial class addisdeleted
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Authentication.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("FatherName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsFrozed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("LastLogIn")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("MotherName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int>("NumberOfLogIn")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("OTP")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("OTPExpiration")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "55f07e28-0a3c-4b9a-a71d-fb7fa15865a3",
                            Name = "CMS-Admin",
                            NormalizedName = "CMS-ADMIN"
                        },
                        new
                        {
                            Id = "d8d79b47-e5c8-4489-87e1-85ef83f1e147",
                            Name = "CMS-Manager",
                            NormalizedName = "CMS-MANAGER"
                        },
                        new
                        {
                            Id = "c27ef78a-6a9f-4062-9330-91e8abbfd066",
                            Name = "CMS-Supervisor",
                            NormalizedName = "CMS-SUPERVISOR"
                        },
                        new
                        {
                            Id = "dce24368-1aa0-4876-8faa-faae25abe4d1",
                            Name = "CMS-Officer",
                            NormalizedName = "CMS-OFFICER"
                        },
                        new
                        {
                            Id = "295156fd-b99f-4146-b86e-cc55eeb90b76",
                            Name = "Offer-Admin",
                            NormalizedName = "OFFER-ADMIN"
                        },
                        new
                        {
                            Id = "18def062-854e-475f-8153-2e383842d8ff",
                            Name = "Offer-Manager",
                            NormalizedName = "OFFER-MANAGER"
                        },
                        new
                        {
                            Id = "6a74d24a-c2ae-4f65-b197-c499caede304",
                            Name = "Offer-Supervisor",
                            NormalizedName = "OFFER-SUPERVISOR"
                        },
                        new
                        {
                            Id = "52671c53-51e6-41da-b641-6c8967967b12",
                            Name = "Offer-Officer",
                            NormalizedName = "OFFER-OFFICER"
                        },
                        new
                        {
                            Id = "a74368b1-3a8f-4458-8c67-721f48992a3a",
                            Name = "Authntication-Admin",
                            NormalizedName = "AUTHNTICATION-ADMIN"
                        },
                        new
                        {
                            Id = "d94170ef-f96f-4ac3-963a-abb3b94454ed",
                            Name = "Authntication-Manager",
                            NormalizedName = "AUTHNTICATION-MANAGER"
                        },
                        new
                        {
                            Id = "2a019680-ebe7-4325-b9a7-c72db024e93d",
                            Name = "Authntication-Supervisor",
                            NormalizedName = "AUTHNTICATION-SUPERVISOR"
                        },
                        new
                        {
                            Id = "bf4a8b5f-9051-4890-8b08-2c9e5da3d518",
                            Name = "Authntication-Officer",
                            NormalizedName = "AUTHNTICATION-OFFICER"
                        },
                        new
                        {
                            Id = "ec9ce570-1ce7-47ae-9722-78647d98aedf",
                            Name = "CWCore-Admin",
                            NormalizedName = "CWCORE-ADMIN"
                        },
                        new
                        {
                            Id = "1385a14b-c73c-49b3-ab9d-b96a5352c279",
                            Name = "CWCore-Manager",
                            NormalizedName = "CWCORE-MANAGER"
                        },
                        new
                        {
                            Id = "c6b01627-2918-43a9-af64-1ced5737c2b9",
                            Name = "CWCore-Supervisor",
                            NormalizedName = "CWCORE-SUPERVISOR"
                        },
                        new
                        {
                            Id = "a3fc42ae-74bd-4fcf-adf5-35bffd44a36a",
                            Name = "CWCore-Officer",
                            NormalizedName = "CWCORE-OFFICER"
                        },
                        new
                        {
                            Id = "7d1bcbab-b688-46cf-ae78-28cb3b42e6ce",
                            Name = "Gallery-Admin",
                            NormalizedName = "GALLERY-ADMIN"
                        },
                        new
                        {
                            Id = "dd7fedfe-2651-451d-bc2d-7076e0b2436d",
                            Name = "Gallery-Manager",
                            NormalizedName = "GALLERY-MANAGER"
                        },
                        new
                        {
                            Id = "352720cc-52bf-4286-894f-d36401ad1484",
                            Name = "Gallery-Supervisor",
                            NormalizedName = "GALLERY-SUPERVISOR"
                        },
                        new
                        {
                            Id = "41da0ca2-8e26-4cd9-83ab-4d99ad249825",
                            Name = "Gallery-Officer",
                            NormalizedName = "GALLERY-OFFICER"
                        },
                        new
                        {
                            Id = "c2bebd68-03ff-47c1-82a1-1343d5af444b",
                            Name = "Hotel-Admin",
                            NormalizedName = "HOTEL-ADMIN"
                        },
                        new
                        {
                            Id = "b135d18f-be25-430d-867f-8abbcbb60674",
                            Name = "Hotel-Manager",
                            NormalizedName = "HOTEL-MANAGER"
                        },
                        new
                        {
                            Id = "4cf8202b-72a7-44ca-b73c-3c8e387f62f7",
                            Name = "Hotel-Supervisor",
                            NormalizedName = "HOTEL-SUPERVISOR"
                        },
                        new
                        {
                            Id = "2cc1dabf-88b6-4cb3-82b8-90db7070b145",
                            Name = "Hotel-Officer",
                            NormalizedName = "HOTEL-OFFICER"
                        },
                        new
                        {
                            Id = "2123b5f7-0d6c-4281-a0e8-e6c559a158c4",
                            Name = "Notification-Admin",
                            NormalizedName = "NOTIFICATION-ADMIN"
                        },
                        new
                        {
                            Id = "6ea1b674-05d1-4711-953a-d097ceab2ec9",
                            Name = "Notification-Manager",
                            NormalizedName = "NOTIFICATION-MANAGER"
                        },
                        new
                        {
                            Id = "6c387b1b-12fb-4c4e-a3d4-5c50d2abd82b",
                            Name = "Notification-Supervisor",
                            NormalizedName = "NOTIFICATION-SUPERVISOR"
                        },
                        new
                        {
                            Id = "20aee4b5-3f62-4165-8ac3-34f657b92b83",
                            Name = "Notification-Officer",
                            NormalizedName = "NOTIFICATION-OFFICER"
                        },
                        new
                        {
                            Id = "52d31128-62e1-4c17-84f9-58d2c75374af",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
