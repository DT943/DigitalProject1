// <auto-generated />
using System;
using Authentication.Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Authentication.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250324101747_AddRoleSeeder")]
    partial class AddRoleSeeder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Authentication.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("LastLogIn")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "527a5695-617f-4904-a8f4-0b3c9ecf4ec6",
                            Name = "CMS-Admin",
                            NormalizedName = "CMS-ADMIN"
                        },
                        new
                        {
                            Id = "ada29c72-fd08-42fd-b35d-d1894cb1789f",
                            Name = "CMS-Manager",
                            NormalizedName = "CMS-MANAGER"
                        },
                        new
                        {
                            Id = "35b3f54a-1f09-4e63-93df-542775030f38",
                            Name = "CMS-Supervisor",
                            NormalizedName = "CMS-SUPERVISOR"
                        },
                        new
                        {
                            Id = "120d87b0-692c-4fa9-95aa-6ff4c50f46d9",
                            Name = "CMS-Officer",
                            NormalizedName = "CMS-OFFICER"
                        },
                        new
                        {
                            Id = "cd95df83-8804-477f-9d0a-1e3f2f17d5e2",
                            Name = "Offer-Admin",
                            NormalizedName = "OFFER-ADMIN"
                        },
                        new
                        {
                            Id = "a632ae4b-e04d-4f7f-b7ce-3d1e2f7419b4",
                            Name = "Offer-Manager",
                            NormalizedName = "OFFER-MANAGER"
                        },
                        new
                        {
                            Id = "c97afe02-a810-4b1a-900f-8efa7a80424d",
                            Name = "Offer-Supervisor",
                            NormalizedName = "OFFER-SUPERVISOR"
                        },
                        new
                        {
                            Id = "5de8bcb0-281e-4d56-a25d-bff4885a2e0e",
                            Name = "Offer-Officer",
                            NormalizedName = "OFFER-OFFICER"
                        },
                        new
                        {
                            Id = "c9cc5cce-6d69-4950-a83b-6b7c516685f2",
                            Name = "Authntication-Admin",
                            NormalizedName = "AUTHNTICATION-ADMIN"
                        },
                        new
                        {
                            Id = "ff944bf4-0c66-4679-ba9d-0d7b01478e49",
                            Name = "Authntication-Manager",
                            NormalizedName = "AUTHNTICATION-MANAGER"
                        },
                        new
                        {
                            Id = "d16c3bf7-71b8-45b2-8a55-4a8ea5b94a6b",
                            Name = "Authntication-Supervisor",
                            NormalizedName = "AUTHNTICATION-SUPERVISOR"
                        },
                        new
                        {
                            Id = "f368bf80-cf94-4252-af43-c139f2b5f6ad",
                            Name = "Authntication-Officer",
                            NormalizedName = "AUTHNTICATION-OFFICER"
                        },
                        new
                        {
                            Id = "bba2e343-3b28-4181-9252-75a3e5fcf0a8",
                            Name = "CWCore-Admin",
                            NormalizedName = "CWCORE-ADMIN"
                        },
                        new
                        {
                            Id = "bf0f10ad-d1e1-4758-843c-e53c40fe3652",
                            Name = "CWCore-Manager",
                            NormalizedName = "CWCORE-MANAGER"
                        },
                        new
                        {
                            Id = "fb30410e-effc-49ca-ad9f-14da8617ede6",
                            Name = "CWCore-Supervisor",
                            NormalizedName = "CWCORE-SUPERVISOR"
                        },
                        new
                        {
                            Id = "1632ca23-2b0d-4aff-af80-4f5b5fc781cc",
                            Name = "CWCore-Officer",
                            NormalizedName = "CWCORE-OFFICER"
                        },
                        new
                        {
                            Id = "a6fb49d3-f2c3-4c68-a378-3a0a7ece5d12",
                            Name = "Gallery-Admin",
                            NormalizedName = "GALLERY-ADMIN"
                        },
                        new
                        {
                            Id = "eac2f75a-15c8-43b5-a7a6-b57892536986",
                            Name = "Gallery-Manager",
                            NormalizedName = "GALLERY-MANAGER"
                        },
                        new
                        {
                            Id = "2f0ed211-ea63-4ac5-bc73-2faedce22790",
                            Name = "Gallery-Supervisor",
                            NormalizedName = "GALLERY-SUPERVISOR"
                        },
                        new
                        {
                            Id = "1a2b55d4-36c0-4456-953f-b689fde6dc87",
                            Name = "Gallery-Officer",
                            NormalizedName = "GALLERY-OFFICER"
                        },
                        new
                        {
                            Id = "17d4bed3-4cb2-4755-9ad9-0d20382044cd",
                            Name = "Hotel-Admin",
                            NormalizedName = "HOTEL-ADMIN"
                        },
                        new
                        {
                            Id = "9de39cac-e6b1-4656-a1fe-93cd0948e9b0",
                            Name = "Hotel-Manager",
                            NormalizedName = "HOTEL-MANAGER"
                        },
                        new
                        {
                            Id = "0e8e86e8-a0ee-4abf-aedb-718dec59aedc",
                            Name = "Hotel-Supervisor",
                            NormalizedName = "HOTEL-SUPERVISOR"
                        },
                        new
                        {
                            Id = "9647facd-82ea-407c-966d-64a044a2beda",
                            Name = "Hotel-Officer",
                            NormalizedName = "HOTEL-OFFICER"
                        },
                        new
                        {
                            Id = "b42d05e8-c81d-4719-91d4-e41835e667dc",
                            Name = "Notification-Admin",
                            NormalizedName = "NOTIFICATION-ADMIN"
                        },
                        new
                        {
                            Id = "5c768e18-c23d-4751-997d-7734018901ec",
                            Name = "Notification-Manager",
                            NormalizedName = "NOTIFICATION-MANAGER"
                        },
                        new
                        {
                            Id = "02cf41c8-b1cc-4d3b-af43-5056e44b1f94",
                            Name = "Notification-Supervisor",
                            NormalizedName = "NOTIFICATION-SUPERVISOR"
                        },
                        new
                        {
                            Id = "20456a46-768f-4b41-8f2d-eb369a1821a9",
                            Name = "Notification-Officer",
                            NormalizedName = "NOTIFICATION-OFFICER"
                        },
                        new
                        {
                            Id = "a5debc4e-adfe-4dcd-8b20-af72fafd919f",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");

                    b.HasData(
                        new
                        {
                            Id = "6b7b3f73-ecad-4acd-97c0-9e0c79e1c0ed",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fdf32f3c-c323-4c5a-b252-e9cab0afd216",
                            Email = "admin@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEH5PqrRKDVK8DgMHP3jfNvx7qe7TwXgkx2nNEwY4N1D/JPHJf//ytzjxGnLQwWy8eg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2160d2d7-a84e-4f7c-a44b-6171a4b38dfd",
                            TwoFactorEnabled = false,
                            UserName = "admin@example.com"
                        },
                        new
                        {
                            Id = "03d648c9-2fb7-4851-becb-068c8bc1b923",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e85b2f90-ba0c-431c-bf21-802c8a25ee3d",
                            Email = "manager@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MANAGER@EXAMPLE.COM",
                            NormalizedUserName = "MANAGER@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAsFGEIkQ/z9GViBPo4KyMhJ9VvpJ+7adlBvCVNnceDAQBEv2HPMgWS3z0Sus7uCeg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c138afa4-21d7-4dc2-859c-78c3b84be9ab",
                            TwoFactorEnabled = false,
                            UserName = "manager@example.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "6b7b3f73-ecad-4acd-97c0-9e0c79e1c0ed",
                            RoleId = "SuperAdmin"
                        },
                        new
                        {
                            UserId = "03d648c9-2fb7-4851-becb-068c8bc1b923",
                            RoleId = "CMS-Manager"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
