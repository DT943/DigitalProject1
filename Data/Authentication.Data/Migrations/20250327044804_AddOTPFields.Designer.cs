// <auto-generated />
using System;
using Authentication.Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Authentication.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250327044804_AddOTPFields")]
    partial class AddOTPFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Authentication.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("FatherName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("LastLogIn")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("MotherName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int>("NumberOfLogIn")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("OTP")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("OTPExpiration")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "7c6edcae-811f-4f62-82c0-af6a9e7c95ca",
                            Name = "CMS-Admin",
                            NormalizedName = "CMS-ADMIN"
                        },
                        new
                        {
                            Id = "89ad789d-5cc1-4fec-ac4b-a7b0455dce52",
                            Name = "CMS-Manager",
                            NormalizedName = "CMS-MANAGER"
                        },
                        new
                        {
                            Id = "d7fa8752-fcbe-474f-8f7f-ccba3c500c1f",
                            Name = "CMS-Supervisor",
                            NormalizedName = "CMS-SUPERVISOR"
                        },
                        new
                        {
                            Id = "21ddfca7-f0b9-4efb-8184-40090779c5b0",
                            Name = "CMS-Officer",
                            NormalizedName = "CMS-OFFICER"
                        },
                        new
                        {
                            Id = "29c666bf-a6bd-45b2-b4e5-c7edfe6cb98f",
                            Name = "Offer-Admin",
                            NormalizedName = "OFFER-ADMIN"
                        },
                        new
                        {
                            Id = "6d7b724f-757c-4d83-b488-ef3ed8a55d9b",
                            Name = "Offer-Manager",
                            NormalizedName = "OFFER-MANAGER"
                        },
                        new
                        {
                            Id = "84d42ef8-8fa7-4785-acf0-d6c4970c6de7",
                            Name = "Offer-Supervisor",
                            NormalizedName = "OFFER-SUPERVISOR"
                        },
                        new
                        {
                            Id = "04440a0b-4715-421e-9abb-91c30dcd12c1",
                            Name = "Offer-Officer",
                            NormalizedName = "OFFER-OFFICER"
                        },
                        new
                        {
                            Id = "9107aad7-31be-4313-8edf-9db675d53e13",
                            Name = "Authntication-Admin",
                            NormalizedName = "AUTHNTICATION-ADMIN"
                        },
                        new
                        {
                            Id = "bc8a6b69-9e33-4edf-ab8a-7ec63f086ec7",
                            Name = "Authntication-Manager",
                            NormalizedName = "AUTHNTICATION-MANAGER"
                        },
                        new
                        {
                            Id = "bf01eea4-c6be-4fe9-aad4-c3c3b5997560",
                            Name = "Authntication-Supervisor",
                            NormalizedName = "AUTHNTICATION-SUPERVISOR"
                        },
                        new
                        {
                            Id = "df24e689-b71b-4182-a1a3-83b2119cdab2",
                            Name = "Authntication-Officer",
                            NormalizedName = "AUTHNTICATION-OFFICER"
                        },
                        new
                        {
                            Id = "94d41678-e74e-4719-974f-f654d33aa82d",
                            Name = "CWCore-Admin",
                            NormalizedName = "CWCORE-ADMIN"
                        },
                        new
                        {
                            Id = "66fabd0d-c971-4d2d-835d-16599d205686",
                            Name = "CWCore-Manager",
                            NormalizedName = "CWCORE-MANAGER"
                        },
                        new
                        {
                            Id = "f93c3430-5abe-4ba5-b2ec-90236b479b63",
                            Name = "CWCore-Supervisor",
                            NormalizedName = "CWCORE-SUPERVISOR"
                        },
                        new
                        {
                            Id = "e7ab47f5-2daa-4b57-b128-5054cf6480c6",
                            Name = "CWCore-Officer",
                            NormalizedName = "CWCORE-OFFICER"
                        },
                        new
                        {
                            Id = "652f9335-c834-48e7-8217-57c8365b36c0",
                            Name = "Gallery-Admin",
                            NormalizedName = "GALLERY-ADMIN"
                        },
                        new
                        {
                            Id = "a9c44bdf-9cd8-4a90-85bf-98b756444d5c",
                            Name = "Gallery-Manager",
                            NormalizedName = "GALLERY-MANAGER"
                        },
                        new
                        {
                            Id = "5f3652c0-ba36-4cab-8e98-36a7e98a0dba",
                            Name = "Gallery-Supervisor",
                            NormalizedName = "GALLERY-SUPERVISOR"
                        },
                        new
                        {
                            Id = "61b7da41-0984-4362-a68f-08bac6f39cf9",
                            Name = "Gallery-Officer",
                            NormalizedName = "GALLERY-OFFICER"
                        },
                        new
                        {
                            Id = "8db992f2-f87c-42e5-8f6a-162523d391e9",
                            Name = "Hotel-Admin",
                            NormalizedName = "HOTEL-ADMIN"
                        },
                        new
                        {
                            Id = "0b73d86f-0ff8-4ad9-ab58-ff52308dea1a",
                            Name = "Hotel-Manager",
                            NormalizedName = "HOTEL-MANAGER"
                        },
                        new
                        {
                            Id = "cf255e6c-7d61-4b02-8872-c4efe62ea6af",
                            Name = "Hotel-Supervisor",
                            NormalizedName = "HOTEL-SUPERVISOR"
                        },
                        new
                        {
                            Id = "83209eeb-a604-4247-828d-18bd7788f52d",
                            Name = "Hotel-Officer",
                            NormalizedName = "HOTEL-OFFICER"
                        },
                        new
                        {
                            Id = "9f57ff5b-e9ea-41e5-9fd1-c0083ccc8b9c",
                            Name = "Notification-Admin",
                            NormalizedName = "NOTIFICATION-ADMIN"
                        },
                        new
                        {
                            Id = "d2099570-c01b-4b56-b757-4c3091ea88d7",
                            Name = "Notification-Manager",
                            NormalizedName = "NOTIFICATION-MANAGER"
                        },
                        new
                        {
                            Id = "02537d6e-78af-4283-9c81-a4c3726938f8",
                            Name = "Notification-Supervisor",
                            NormalizedName = "NOTIFICATION-SUPERVISOR"
                        },
                        new
                        {
                            Id = "5b10e3de-e565-4e5c-b120-73fb803bb096",
                            Name = "Notification-Officer",
                            NormalizedName = "NOTIFICATION-OFFICER"
                        },
                        new
                        {
                            Id = "6d2ca768-a80a-4fa3-aad4-e3700266f579",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
