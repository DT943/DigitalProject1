// <auto-generated />
using System;
using Authentication.Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Authentication.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250330053714_Add-LastOtpCheckedDefualt")]
    partial class AddLastOtpCheckedDefualt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Authentication.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("FatherName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsFrozed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("LastLogIn")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime>("LastOTPChecked")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("MotherName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int>("NumberOfLogIn")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("OTP")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("OTPExpiration")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "775e89da-d8af-4e09-ab57-ad64abc38863",
                            Name = "CMS-Admin",
                            NormalizedName = "CMS-ADMIN"
                        },
                        new
                        {
                            Id = "418452c5-721b-4c3d-8845-09416c7a7715",
                            Name = "CMS-Manager",
                            NormalizedName = "CMS-MANAGER"
                        },
                        new
                        {
                            Id = "660e7e45-1d70-4801-a294-003694b6b8c5",
                            Name = "CMS-Supervisor",
                            NormalizedName = "CMS-SUPERVISOR"
                        },
                        new
                        {
                            Id = "edf82bed-f183-4776-ac6c-eb32c7b8256a",
                            Name = "CMS-Officer",
                            NormalizedName = "CMS-OFFICER"
                        },
                        new
                        {
                            Id = "d200f10f-9b4c-4524-b877-03d310956b86",
                            Name = "Offer-Admin",
                            NormalizedName = "OFFER-ADMIN"
                        },
                        new
                        {
                            Id = "2b62626c-84c0-498a-96c9-df883ce1b60f",
                            Name = "Offer-Manager",
                            NormalizedName = "OFFER-MANAGER"
                        },
                        new
                        {
                            Id = "49e6341e-cb38-4e53-b4ad-ddfc47ac3265",
                            Name = "Offer-Supervisor",
                            NormalizedName = "OFFER-SUPERVISOR"
                        },
                        new
                        {
                            Id = "7ffbffaa-d6d2-4dfe-ba3f-791584dde974",
                            Name = "Offer-Officer",
                            NormalizedName = "OFFER-OFFICER"
                        },
                        new
                        {
                            Id = "3a050682-d744-4b34-918e-6cc9ba978f57",
                            Name = "Authntication-Admin",
                            NormalizedName = "AUTHNTICATION-ADMIN"
                        },
                        new
                        {
                            Id = "12f35d91-4395-493c-8286-9aca814e89bc",
                            Name = "Authntication-Manager",
                            NormalizedName = "AUTHNTICATION-MANAGER"
                        },
                        new
                        {
                            Id = "9f16beed-85c0-4c2c-8b25-1a35a59abd81",
                            Name = "Authntication-Supervisor",
                            NormalizedName = "AUTHNTICATION-SUPERVISOR"
                        },
                        new
                        {
                            Id = "860a44f4-c0e7-4d2c-a70a-8c9f23a41444",
                            Name = "Authntication-Officer",
                            NormalizedName = "AUTHNTICATION-OFFICER"
                        },
                        new
                        {
                            Id = "05b85d54-66b4-4553-918a-e353c704c6da",
                            Name = "CWCore-Admin",
                            NormalizedName = "CWCORE-ADMIN"
                        },
                        new
                        {
                            Id = "bdcc8ecf-ef40-4ec5-9531-da6fc4a5535c",
                            Name = "CWCore-Manager",
                            NormalizedName = "CWCORE-MANAGER"
                        },
                        new
                        {
                            Id = "1b9dae3f-a369-4c0b-9574-d0c0e0eda64e",
                            Name = "CWCore-Supervisor",
                            NormalizedName = "CWCORE-SUPERVISOR"
                        },
                        new
                        {
                            Id = "5af77219-e944-4461-97a2-6990fd969a0e",
                            Name = "CWCore-Officer",
                            NormalizedName = "CWCORE-OFFICER"
                        },
                        new
                        {
                            Id = "0a1f0e8b-756b-4b05-80db-23df4c1bead7",
                            Name = "Gallery-Admin",
                            NormalizedName = "GALLERY-ADMIN"
                        },
                        new
                        {
                            Id = "448ecdb9-fee1-4939-9358-5e2bef96e817",
                            Name = "Gallery-Manager",
                            NormalizedName = "GALLERY-MANAGER"
                        },
                        new
                        {
                            Id = "020d60ac-78e7-46ed-855f-159c69a609f5",
                            Name = "Gallery-Supervisor",
                            NormalizedName = "GALLERY-SUPERVISOR"
                        },
                        new
                        {
                            Id = "936db107-ed29-413d-8d33-1312afa09ea6",
                            Name = "Gallery-Officer",
                            NormalizedName = "GALLERY-OFFICER"
                        },
                        new
                        {
                            Id = "454dabe9-9b14-40b5-b429-179da3a6a7b7",
                            Name = "Hotel-Admin",
                            NormalizedName = "HOTEL-ADMIN"
                        },
                        new
                        {
                            Id = "efc4891a-430c-4350-b82a-35d49b7e6e62",
                            Name = "Hotel-Manager",
                            NormalizedName = "HOTEL-MANAGER"
                        },
                        new
                        {
                            Id = "8439ec37-ec16-4e3c-9a09-df3217d215c3",
                            Name = "Hotel-Supervisor",
                            NormalizedName = "HOTEL-SUPERVISOR"
                        },
                        new
                        {
                            Id = "9a37f78e-f856-41fa-9510-5d80f37e4930",
                            Name = "Hotel-Officer",
                            NormalizedName = "HOTEL-OFFICER"
                        },
                        new
                        {
                            Id = "59630bbb-bc8f-4cfd-9fa0-77564628def0",
                            Name = "Notification-Admin",
                            NormalizedName = "NOTIFICATION-ADMIN"
                        },
                        new
                        {
                            Id = "f3991da0-25cc-4232-8368-b5f0b92014a2",
                            Name = "Notification-Manager",
                            NormalizedName = "NOTIFICATION-MANAGER"
                        },
                        new
                        {
                            Id = "e6caaba6-8288-45ff-b235-ee143f202d87",
                            Name = "Notification-Supervisor",
                            NormalizedName = "NOTIFICATION-SUPERVISOR"
                        },
                        new
                        {
                            Id = "6e60310d-7fe9-49b6-879b-c0ffc47a923e",
                            Name = "Notification-Officer",
                            NormalizedName = "NOTIFICATION-OFFICER"
                        },
                        new
                        {
                            Id = "82482d6e-f9c2-4dd3-a53a-d1fde553dfb8",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
