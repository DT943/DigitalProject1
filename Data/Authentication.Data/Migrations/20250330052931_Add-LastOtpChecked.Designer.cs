// <auto-generated />
using System;
using Authentication.Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Authentication.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250330052931_Add-LastOtpChecked")]
    partial class AddLastOtpChecked
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Authentication.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("FatherName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsFrozed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("LastLogIn")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime>("LastOTPChecked")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("MotherName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int>("NumberOfLogIn")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("OTP")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("OTPExpiration")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "04934ab6-6c9c-4fa1-ab36-9c6ee954e748",
                            Name = "CMS-Admin",
                            NormalizedName = "CMS-ADMIN"
                        },
                        new
                        {
                            Id = "735ef191-4635-41b3-af9a-19ef21fb8964",
                            Name = "CMS-Manager",
                            NormalizedName = "CMS-MANAGER"
                        },
                        new
                        {
                            Id = "caec9049-8143-4d9c-b1b2-b07bba9adbb6",
                            Name = "CMS-Supervisor",
                            NormalizedName = "CMS-SUPERVISOR"
                        },
                        new
                        {
                            Id = "edd3383c-5aed-4374-8d4b-476203efd386",
                            Name = "CMS-Officer",
                            NormalizedName = "CMS-OFFICER"
                        },
                        new
                        {
                            Id = "a6480ac0-a844-49e1-abc0-316a752b076e",
                            Name = "Offer-Admin",
                            NormalizedName = "OFFER-ADMIN"
                        },
                        new
                        {
                            Id = "4c00bc71-a1c3-4302-abd3-91dc2c10d6d5",
                            Name = "Offer-Manager",
                            NormalizedName = "OFFER-MANAGER"
                        },
                        new
                        {
                            Id = "83b1358a-d571-4494-888d-fe4f2456f0af",
                            Name = "Offer-Supervisor",
                            NormalizedName = "OFFER-SUPERVISOR"
                        },
                        new
                        {
                            Id = "071121a3-a5da-45b6-9e24-5014ccc6246e",
                            Name = "Offer-Officer",
                            NormalizedName = "OFFER-OFFICER"
                        },
                        new
                        {
                            Id = "db2b3834-62ea-4363-b545-91b735424e24",
                            Name = "Authntication-Admin",
                            NormalizedName = "AUTHNTICATION-ADMIN"
                        },
                        new
                        {
                            Id = "036af88c-7f26-4a5c-9f8e-b7275bb205b2",
                            Name = "Authntication-Manager",
                            NormalizedName = "AUTHNTICATION-MANAGER"
                        },
                        new
                        {
                            Id = "9aa58402-e520-47f7-afb3-b66ff512789d",
                            Name = "Authntication-Supervisor",
                            NormalizedName = "AUTHNTICATION-SUPERVISOR"
                        },
                        new
                        {
                            Id = "705dd026-fd38-44ef-9b9b-850100a87de3",
                            Name = "Authntication-Officer",
                            NormalizedName = "AUTHNTICATION-OFFICER"
                        },
                        new
                        {
                            Id = "85edc6aa-54b7-4121-ae58-883aa6e0fcb6",
                            Name = "CWCore-Admin",
                            NormalizedName = "CWCORE-ADMIN"
                        },
                        new
                        {
                            Id = "40d6aa2b-76f6-458a-869f-ac215526e07c",
                            Name = "CWCore-Manager",
                            NormalizedName = "CWCORE-MANAGER"
                        },
                        new
                        {
                            Id = "9a20b562-abd8-47e6-8252-bce057ebe10c",
                            Name = "CWCore-Supervisor",
                            NormalizedName = "CWCORE-SUPERVISOR"
                        },
                        new
                        {
                            Id = "fdecff09-b290-4c2f-89f5-e6af65955382",
                            Name = "CWCore-Officer",
                            NormalizedName = "CWCORE-OFFICER"
                        },
                        new
                        {
                            Id = "69a8eac4-bf50-417c-84d9-32bdcabd908f",
                            Name = "Gallery-Admin",
                            NormalizedName = "GALLERY-ADMIN"
                        },
                        new
                        {
                            Id = "e606249e-f1cb-4534-abf2-8d0d4fe77e7d",
                            Name = "Gallery-Manager",
                            NormalizedName = "GALLERY-MANAGER"
                        },
                        new
                        {
                            Id = "3aaa5d33-d9d9-49aa-8756-f96a55a30d00",
                            Name = "Gallery-Supervisor",
                            NormalizedName = "GALLERY-SUPERVISOR"
                        },
                        new
                        {
                            Id = "b78e69ab-dd6b-41e1-ad16-18ba3de500cb",
                            Name = "Gallery-Officer",
                            NormalizedName = "GALLERY-OFFICER"
                        },
                        new
                        {
                            Id = "4334c7b8-b800-4561-8a0e-7785aaaa2887",
                            Name = "Hotel-Admin",
                            NormalizedName = "HOTEL-ADMIN"
                        },
                        new
                        {
                            Id = "70e941cd-dca5-4af7-a468-71abe33b80de",
                            Name = "Hotel-Manager",
                            NormalizedName = "HOTEL-MANAGER"
                        },
                        new
                        {
                            Id = "9bbcf419-5c0a-4caa-85f1-245b2b947826",
                            Name = "Hotel-Supervisor",
                            NormalizedName = "HOTEL-SUPERVISOR"
                        },
                        new
                        {
                            Id = "03ff3ee3-8950-41b1-8445-0bf577f9e150",
                            Name = "Hotel-Officer",
                            NormalizedName = "HOTEL-OFFICER"
                        },
                        new
                        {
                            Id = "096a28ab-9b2e-45f0-b648-cd88b7517202",
                            Name = "Notification-Admin",
                            NormalizedName = "NOTIFICATION-ADMIN"
                        },
                        new
                        {
                            Id = "88ab1ebd-e139-4654-9ab4-483373a4ad32",
                            Name = "Notification-Manager",
                            NormalizedName = "NOTIFICATION-MANAGER"
                        },
                        new
                        {
                            Id = "398137ed-cee2-4013-9c94-ccc90ef53e89",
                            Name = "Notification-Supervisor",
                            NormalizedName = "NOTIFICATION-SUPERVISOR"
                        },
                        new
                        {
                            Id = "9e6f2224-16bf-4110-b648-b4ef6553e798",
                            Name = "Notification-Officer",
                            NormalizedName = "NOTIFICATION-OFFICER"
                        },
                        new
                        {
                            Id = "53bef389-bd02-478d-b970-a151b652a3a3",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Authentication.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
