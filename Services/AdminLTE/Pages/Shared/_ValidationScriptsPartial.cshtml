<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<!--FileIndex-->
<!--MainScript-->
<script src="~/plugins/jquery/jquery.min.js"></script>

<script src="~/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>

<script src="~/plugins/ekko-lightbox/ekko-lightbox.min.js"></script>

<script src="~/dist/js/adminlte.min.js"></script>

<script src="~/plugins/filterizr/jquery.filterizr.min.js"></script>
<script src="~/dist/js/demo.js"></script>
<!--ModalInformation-->
<script>
    $(function () {
        $(document).on('click', '[data-toggle="lightbox"]', function (event) {
            event.preventDefault();
            $(this).ekkoLightbox({
                alwaysShowClose: true
            });
        });

        $('.filter-container').filterizr({ gutterPixels: 3 });
        $('.btn[data-filter]').on('click', function () {
            $('.btn[data-filter]').removeClass('active');
            $(this).addClass('active');
        });
        // Handle file click to populate modal
        $('.filtr-item a').on('click', function () {
            var fileData = $(this).data();
            $('#fileUploadedOn').text(fileData.uploadedon);
            $('#fileUploadedBy').text(fileData.uploadedby);
            $('#fileId').val(fileData.fileid);
            $('#galleryId').val(fileData.galleryid);
            $('#fileName').text(fileData.name);
            $('#fileFileType').text(fileData.filetype);
            $('#fileSize').text(fileData.size);
            $('#fileLength').text(fileData.filelength);
            $('#fileImagewidth').text(fileData.fileimagewidth);
            $('#fileImageHeight').text(fileData.fileimageheight);
            $('#fileImageAlternativeText').val(fileData.fileimagealternativetext);
            $('#fileTitle').val(fileData.filetitle);
            $('#fileCaption').val(fileData.caption);
            $('#fileDescription').val(fileData.description);
            $('#fileFileUrl').val(fileData.fileurlpath);

            var previewContainer = $('#filePreviewContainer');
            previewContainer.empty();
            // Hide all file-specific sections initially
            $('#imageDimensions').hide();
            $('#fileLengthSection').hide();
            $('#imageFields').hide();
            if (fileData.filetype === 'Image') {
                previewContainer.html('<img src="' + fileData.fileurlpath + '" class="img-fluid" alt="Image Preview">');
                $('#imageDimensions').show();
                $('#imageFields').show();
                $('#fileImageWidth').text(fileData.fileImagewidth + 'px');
                $('#fileImageHeight').text(fileData.fileImageHeight + 'px');
                $('#fileImageAlternativeText').val(fileData.fileImageAlternativeText || 'N/A');
            } 
            else if (fileData.filetype === 'Video') {

                $('#fileLengthSection').show();
                $('#fileLength').text(fileData.fileLength || 'N/A');

                previewContainer.html('<video class="img-fluid" controls><source src="' + fileData.fileurlpath + '" type="video/mp4">Your browser does not support the video tag.</video>');
            } 
            else if (fileData.filetype === 'Audio') {
                $('#fileLengthSection').show();
                $('#fileLength').text(fileData.fileLength || 'N/A');

                previewContainer.html('<audio class="img-fluid" style="width: 1000px; height: 50px; " controls><source src="' + fileData.path + '" type="audio/mp3">Your browser does not support the audio tag.</audio>');
            } 
            else {
                previewContainer.html('<iframe src="' + fileData.fileurlpath + '" width="100%" height="400px"></iframe>');
            }

            $('#downloadButton').attr('href', fileData.fileurlpath);

            $('#fileModal').modal('show');
            
            document.getElementById('deleteonefile').addEventListener('click', function (event) {
                event.preventDefault();

                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $('#deletefile').val( fileData.fileid);
                        $('#galleryIdforfiledeleted').val(fileData.galleryid);
                        $('#delete').submit();
                        console.log("ok");
                    }
                });
            });

        });
    })
</script>
<!--ModalInformation-->
<!--MainScript-->


<!--deleteFiles-->
<script>

    document.getElementById('deleteFileSelectedButton').addEventListener('click', function () {
        const checkboxes = document.querySelectorAll('.file-checkbox:checked');
        const selectedIds = Array.from(checkboxes).map(checkbox => checkbox.value);

        if (selectedIds.length === 0) {
            alert('Please select at least one file to delete.');
            return;
        }

        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById('selectedFileIds').value = selectedIds.join(',');
                document.getElementById('deleteFileForm').submit();
            }
        });
    });

</script>
<!--deleteFiles-->

<!--deleteGalleries-->
<script>

    document.getElementById('deleteSelectedButton').addEventListener('click', function () {
        const checkboxes = document.querySelectorAll('.gallery-checkbox:checked');
        const selectedIds = Array.from(checkboxes).map(checkbox => checkbox.value);

        if (selectedIds.length === 0) {
            alert('Please select at least one gallery to delete.');
            return;
        }

        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById('selectedGalleryIds').value = selectedIds.join(',');
                document.getElementById('deleteForm').submit();
            }
        });
    });

</script>
<!--deleteGallries-->

<!--clipboardScript-->
<script>
    // Function to handle copy to clipboard
    function copyToClipboard(inputId) {
        const copyText = document.getElementById(inputId);
        copyText.select();
        copyText.setSelectionRange(0, 99999); // For mobile devices
        navigator.clipboard.writeText(copyText.value)
            .then(() => {
                console.error('done copy: ', err);
            })
            .catch(err => {
                console.error('Failed to copy: ', err);
            });
    }
    // Add event listeners for each copy button
    document.getElementById('fileCopyButton').addEventListener('click', function () {
        copyToClipboard('fileFileUrl');
    });
</script>
<!--clipboardScript-->
<!--CreateFileValidatio-->
<script>
    function validateFile() {
        let fileType = document.getElementById("fileType").value.toLowerCase();
        let fileInput = document.getElementById("fileInput");
        let fileTypeError = document.getElementById("fileTypeError");
        let fileError = document.getElementById("fileError");

        // Reset errors
        fileTypeError.style.display = "none";
        fileError.style.display = "none";

        // Validate file type selection
        if (!fileType) {
            fileTypeError.style.display = "block";
            return false;
        }

        // Validate uploaded file
        if (fileInput.files.length > 0) {
            let allowedExtensions = {
                "image": ["jpg", "jpeg", "png", "gif"],
                "pdf": ["pdf"],
                "word": ["doc", "docx"],
                "excel": ["xls", "xlsx"]
            };

            let fileName = fileInput.files[0].name;
            let fileExtension = fileName.split('.').pop().toLowerCase();

            if (!allowedExtensions[fileType].includes(fileExtension)) {
                fileError.style.display = "block";
                return false;
            }
        } else {
            fileError.style.display = "block";
            return false;
        }

        return true;
    }
    function toggleAltTextField() {
        let fileType = document.getElementById("fileType").value.toLowerCase();
        let altTextContainer = document.getElementById("altTextContainer");

        // Show the alt text input only if the file type is "image"
        if (fileType === "image") {
            altTextContainer.style.display = "block";
        } else {
            altTextContainer.style.display = "none";
        }
    }

    // Call the function on page load to set the initial state
    document.addEventListener("DOMContentLoaded", function () {
        toggleAltTextField();
    });</script>
<!--CreateFileValidatio-->
